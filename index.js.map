{"version":3,"file":"index.js","sources":["randomStr.js"],"sourcesContent":["/**\n *\n * @param start {number}\n * @param end {number}\n * @return {number}\n */\nArray.prototype.sum = function (start, end) {\n    return this.reduce((total, currentValue, currentIndex) => {\n        if (currentIndex >= start && currentIndex < end) {\n            return total + currentValue;\n        }\n        return total;\n    }, 0)\n}\nconst shuffle = function (arrBox) {\n    arrBox = typeof arrBox === 'string' ? arrBox.split('') : arrBox\n    let shuffleBox = []\n    let len = arrBox.length\n    for (let i = 0; i < len; i++) {\n        let boxIndex = Math.floor(Math.random() * arrBox.length)\n        shuffleBox.push(arrBox[boxIndex].valueOf())\n        arrBox.splice(boxIndex, 1)\n    }\n    return shuffleBox\n}\n/**\n * @param len\n * @param chars\n * @returns {string}\n */\nconst randStr = (len, chars = []) => {\n    chars = chars || []\n    const str = shuffle(chars.join(\"\")).join(\"\")\n    let randFull = shuffle(str + str + str + str + str + str + str).join(\"\");\n    return randFull.substring(0, len);\n}\nexport const CHARS = {\n    'ABC_XYZ': 'ABCDEFGHIGKLMNOPKRSTUVWXYZ',\n    'abc_xyz': 'abcdefghigklmnopkrstuvwxyz',\n    '1234567890': '1234567890',\n    '!@#$%^&*()_': '!@#$%^&*()_',\n    '+.(~)[]?}|{][,-': '+.(~)[]?}|{][,-',\n}\n/**\n * random a string\n * @param len number\n * @param chars {string[]}\n * @param upperCase {boolean}\n * @param separator {string}\n * @param separatorSteps {number[]|number}\n * @return {string}\n */\nexport const randomStr = (len = 16,\n                          chars = [],\n                          upperCase = false,\n                          separator = \"\",\n                          separatorSteps = 4,\n) => {\n    chars = chars.length === 0 ? [\n        CHARS.ABC_XYZ,\n        CHARS.abc_xyz,\n        CHARS[\"1234567890\"],\n        CHARS[\"+.(~)[]?}|{][,-\"],\n        CHARS[\"!@#$%^&*()_\"]] : chars;\n    let str = randStr(len, chars);\n    if (separator) {\n        let regex = null\n        if (Array.isArray(separatorSteps)) {\n            separatorSteps.push(str.length)\n            str = separatorSteps.map((pos, index) => str.substring(separatorSteps.sum(0, index), separatorSteps.sum(0, index + 1))).join(separator)\n        } else {\n            regex = new RegExp('(.{' + separatorSteps + '})(?!$)', 'g')\n            str = str.replace(regex, \"$1 \").split(\" \").join(separator)\n        }\n\n    }\n    return upperCase ? str.toUpperCase() : str;\n}\n"],"names":[],"mappings":"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"}